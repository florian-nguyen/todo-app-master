{"version":3,"sources":["api/axios.js","components/todo/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","TodoContainer","styled","div","HeaderContainer","Logo","NavigationBar","OptionLabel","motion","label","AddTodoSection","form","AddInput","input","AddButton","TodoList","TodoItem","CheckBox","StyledIcon","color","Todo","useState","todos","setTodos","mode","setMode","newTodo","setNewTodo","getAll","a","get","response","data","console","error","updateTodoStatus","id","URI","encodeURI","map","todo","deleteTodo","filter","handleAddTodo","e","preventDefault","post","name","log","message","alert","useEffect","onSubmit","onClick","type","value","defaultChecked","required","placeholder","onChange","target","AnimatePresence","completed","content","AppContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84939287.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst devURL = `http://localhost:8080/api/v1/todo`;\n\nconst proURL = `https://fng-dc-todo-list.herokuapp.com/api/v1/todo`;\n\nconst baseURL = process.env.NODE_ENV === \"production\" ? proURL : devURL;\n\nexport default axios.create({\n    baseURL,\n});\n\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport axios from \"../../api/axios\";\nimport { FiCheckCircle, FiCircle, FiTrash2 } from \"react-icons/fi\";\n\nconst TodoContainer = styled.div`\n\twidth: 60%;\n\theight: 60%;\n\tmin-width: 300px;\n\tmin-height: 400px;\n\tmax-width: 600px;\n\tmax-height: 700px;\n\tmargin: auto;\n`;\n\nconst HeaderContainer = styled.div`\n\twidth: 100%;\n\tpadding: 1rem 0 1.5rem;\n`;\n\nconst Logo = styled.div`\n\twidth: 100%;\n\ttext-align: center;\n\tfont-family: \"Raleway\", sans-serif;\n\tfont-weight: 700;\n\tfont-size: 1.5rem;\n`;\n\nconst NavigationBar = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: flex-end;\n\tgap: 2rem;\n\n\twidth: 100%;\n\tbox-sizing: border-box;\n\tmargin: 0;\n\tpadding: 1rem 2rem;\n\n\tfont-size: 0.8rem;\n\tfont-weight: 500;\n\n\tborder-bottom: 1px solid #bdbdbd;\n\tborder-radius: 1px;\n`;\n\nconst OptionLabel = styled(motion.label)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\theight: 35px;\n\twidth: 100%;\n\tlist-style: none;\n\n\tcursor: pointer;\n\n\t& > input {\n\t\tdisplay: none;\n\t}\n\n\tinput + span {\n\t\ttransition: all 0.2s ease-in-out;\n\t\tborder: 3px solid transparent;\n\t}\n\n\tinput:checked + span {\n\t\tdisplay: block;\n\t\theight: 100%;\n\t\twidth: 100%;\n\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\n\t\tfont-weight: 600;\n\t\tcolor: #2f80ed;\n\n\t\tborder-bottom: 3px solid #2f80ed;\n\n\t\ttransform: translateY(-2px);\n\t}\n`;\n\nconst AddTodoSection = styled.form`\n\twidth: 100%;\n\theight: 35px;\n\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tgap: 1.5rem;\n`;\n\nconst AddInput = styled(motion.input)`\n\tpadding: 0.5rem 1rem;\n\tflex: 1;\n\tborder: 1px solid #bdbdbd;\n\tborder-radius: 8px;\n\ttransition: all 0.3s ease-in-out;\n\n\t&:focus {\n\t\toutline: none;\n\t\tborder: 1px solid #333;\n\t}\n`;\n\nconst AddButton = styled.input`\n\toutline: none;\n\tborder: none;\n\tcursor: pointer;\n\n\tpadding: 0 1.5rem;\n\tborder-radius: 8px;\n\n\tcolor: white;\n\tbackground-color: #2f80ed;\n\t/* display: flex;\n\talign-items: center;\n\tjustify-content: center; */\n`;\n\nconst TodoList = styled.div`\n\tmargin-top: 1rem;\n\twidth: 100%;\n\theight: 98%;\n\toverflow-y: scroll;\n\n\t/* width */\n\t&::-webkit-scrollbar {\n\t\twidth: 5px;\n\t}\n\n\t/* Track */\n\t&::-webkit-scrollbar-track {\n\t\tbackground: transparent;\n\t}\n\n\t/* Handle */\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground: #2f80ed70;\n\t\tborder-radius: 3px;\n\t}\n\n\t/* Handle on hover */\n\t&::-webkit-scrollbar-thumb:hover {\n\t\tbackground: #555;\n\t}\n`;\n\nconst TodoItem = styled(motion.label)`\n\t/* width: 100%; */\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 1rem;\n\tmargin: 0.5rem 0;\n\tmargin-right: auto;\n\n\t& span {\n\t\tfont-weight: 500;\n\t\tfont-size: 1rem;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t}\n`;\n\nconst CheckBox = styled.input`\n\twidth: 30px;\n\theight: 30px;\n\tbackground-color: red;\n\tdisplay: none;\n`;\n\nconst StyledIcon = styled(motion.div)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\t& :nth-child(1) {\n\t\theight: 30px;\n\t\twidth: 30px;\n\t\ttransition: all 0.2s ease-in-out;\n\t\tcursor: pointer;\n\t\tbox-sizing: border-box;\n\t\tpadding: 2px;\n\n\t\t&:hover {\n\t\t\tcolor: ${({ color }) => color || \"black\"};\n\t\t\tbackground-color: ${({ color }) => color || \"black\"};\n\t\t\tborder-radius: 2px;\n\t\t\topacity: 0.7;\n\t\t}\n\n\t\t&:hover * {\n\t\t\tcolor: ${({ color }) => \"white\" || \"black\"};\n\t\t\tborder: 1px solid black;\n\t\t}\n\t}\n`;\n\nexport default function Todo() {\n\tconst [todos, setTodos] = useState([]);\n\tconst [mode, setMode] = useState(\"All\");\n\n\tconst [newTodo, setNewTodo] = useState(\"\");\n\n\tconst setAllMode = () => {\n\t\tsetMode(\"All\");\n\t};\n\n\tconst setActiveMode = () => {\n\t\tsetMode(\"Active\");\n\t};\n\n\tconst setCompletedMode = () => {\n\t\tsetMode(\"Completed\");\n\t};\n\n\tconst getAll = async () => {\n\t\ttry {\n\t\t\tconst response = await axios.get(\"/\");\n\t\t\tsetTodos([...response.data]);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tconst updateTodoStatus = async (id) => {\n\t\ttry {\n\t\t\tconst URI = encodeURI(`/update/status/${id}`);\n\t\t\tconst response = await axios.get(URI);\n\t\t\tsetTodos([\n\t\t\t\t...todos.map((todo) => (todo.id === id ? response.data : todo)),\n\t\t\t]);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tconst deleteTodo = async (id) => {\n\t\ttry {\n\t\t\tconst URI = encodeURI(`/delete/${id}`);\n\t\t\tawait axios.get(URI);\n\t\t\tsetTodos([...todos.filter((todo) => todo.id !== id)]);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tconst handleAddTodo = async (e) => {\n\t\te.preventDefault();\n\n\t\ttry {\n\t\t\tconst response = await axios.post(\"/add\", {\n\t\t\t\tname: newTodo,\n\t\t\t});\n\n\t\t\tconsole.log(response);\n\t\t\tif (response.data.message) {\n\t\t\t\talert(response.data.message);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetTodos([...todos, response.data]);\n\t\t\tsetNewTodo(\"\");\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetMode(\"All\");\n\t\tgetAll();\n\t}, []);\n\n\treturn (\n\t\t<TodoContainer onSubmit={handleAddTodo}>\n\t\t\t<HeaderContainer>\n\t\t\t\t<Logo>#todo</Logo>\n\n\t\t\t\t<NavigationBar>\n\t\t\t\t\t<OptionLabel onClick={setAllMode}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"mode\"\n\t\t\t\t\t\t\tvalue=\"all\"\n\t\t\t\t\t\t\tdefaultChecked={mode === \"All\" ? true : false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>All</span>\n\t\t\t\t\t</OptionLabel>\n\n\t\t\t\t\t<OptionLabel onClick={setActiveMode}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"mode\"\n\t\t\t\t\t\t\tvalue=\"active\"\n\t\t\t\t\t\t\tdefaultChecked={mode === \"Active\" ? true : false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>Active</span>\n\t\t\t\t\t</OptionLabel>\n\n\t\t\t\t\t<OptionLabel onClick={setCompletedMode}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"mode\"\n\t\t\t\t\t\t\tvalue=\"completed\"\n\t\t\t\t\t\t\tdefaultChecked={mode === \"Completed\" ? true : false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>Completed</span>\n\t\t\t\t\t</OptionLabel>\n\t\t\t\t</NavigationBar>\n\t\t\t</HeaderContainer>\n\n\t\t\t<AddTodoSection>\n\t\t\t\t<AddInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\trequired\n\t\t\t\t\tplaceholder=\"Enter a new task here...\"\n\t\t\t\t\tonChange={(e) => setNewTodo(e.target.value)}\n\t\t\t\t\tvalue={newTodo}\n\t\t\t\t/>\n\t\t\t\t<AddButton type=\"submit\" value=\"Send\" />\n\t\t\t</AddTodoSection>\n\n\t\t\t<TodoList>\n\t\t\t\t<AnimatePresence>\n\t\t\t\t\t{todos\n\t\t\t\t\t\t.filter((todo) => {\n\t\t\t\t\t\t\tswitch (mode) {\n\t\t\t\t\t\t\t\tcase \"Completed\":\n\t\t\t\t\t\t\t\t\treturn todo.completed === true;\n\t\t\t\t\t\t\t\tcase \"Active\":\n\t\t\t\t\t\t\t\t\treturn todo.completed === false;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map((todo) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TodoItem key={todo.id}>\n\t\t\t\t\t\t\t\t\t<StyledIcon\n\t\t\t\t\t\t\t\t\t\tcolor={todo.completed === true ? \"green\" : \"orange\"}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{todo.completed === true ? (\n\t\t\t\t\t\t\t\t\t\t\t<FiCheckCircle\n\t\t\t\t\t\t\t\t\t\t\t\tkey=\"fi-check-circle\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\t\t\tid={todo.id}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => updateTodoStatus(todo.id)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<FiCircle\n\t\t\t\t\t\t\t\t\t\t\t\tkey=\"fi-circle\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\tid={todo.id}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => updateTodoStatus(todo.id)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</StyledIcon>\n\t\t\t\t\t\t\t\t\t<CheckBox type=\"checkbox\" />\n\t\t\t\t\t\t\t\t\t<span>{todo.content}</span>\n\t\t\t\t\t\t\t\t\t{mode === \"Completed\" && (\n\t\t\t\t\t\t\t\t\t\t<StyledIcon color=\"tomato\">\n\t\t\t\t\t\t\t\t\t\t\t<FiTrash2\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"tomato\"\n\t\t\t\t\t\t\t\t\t\t\t\tid={todo.id}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteTodo(todo.id)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</StyledIcon>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</TodoItem>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</AnimatePresence>\n\t\t\t</TodoList>\n\t\t</TodoContainer>\n\t);\n}\n","import \"./App.css\";\nimport Todo from \"./components/todo\";\nimport styled from \"styled-components\";\n\nconst AppContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\tfont-family: \"Montserrat\", sans-serif;\n`;\n\nfunction App() {\n\treturn (\n\t\t<AppContainer>\n\t\t\t<Todo />\n\t\t</AppContainer>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}